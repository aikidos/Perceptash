<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Perceptash</name>
    </assembly>
    <members>
        <member name="T:Perceptash.Computers.IImageHashComputer`1">
            <summary>
            Интерфейс, используемый для описания реализации метода расчета хеш-суммы.
            </summary>
            <typeparam name="THash">Тип значения хеш-суммы.</typeparam>
        </member>
        <member name="M:Perceptash.Computers.IImageHashComputer`1.ComputeAsync(System.IO.Stream,Perceptash.Transformers.IImageTransformer,System.Threading.CancellationToken)">
            <summary>
            Возвращает хеш-сумму изображения.
            </summary>
            <param name="stream">Поток, который относится к изображению.</param>
            <param name="transformer">Реализация методов преобразования изображения.</param>
            <param name="cancellationToken">Токен отмены операции.</param>
        </member>
        <member name="T:Perceptash.Computers.ImageAverageHashComputer">
            <summary>
            Реализация метода расчета хеш-суммы по алгоритму среднего хеша.
            </summary>
        </member>
        <member name="M:Perceptash.Computers.ImageAverageHashComputer.ComputeAsync(System.IO.Stream,Perceptash.Transformers.IImageTransformer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.Computers.ImageDifferenceHash256Computer">
            <summary>
            Реализация метода расчета 256-битной хеш-суммы.
            Описание алгоритма: http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html
            </summary>
        </member>
        <member name="M:Perceptash.Computers.ImageDifferenceHash256Computer.ComputeAsync(System.IO.Stream,Perceptash.Transformers.IImageTransformer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.Computers.ImageDifferenceHash64Computer">
            <summary>
            Реализация метода расчета 64-битной хеш-суммы.
            Описание алгоритма: http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html
            </summary>
        </member>
        <member name="M:Perceptash.Computers.ImageDifferenceHash64Computer.ComputeAsync(System.IO.Stream,Perceptash.Transformers.IImageTransformer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.ImageHasherExtensions">
            <summary>
            Вспомогательный класс для работы с реализациями <see cref="T:Perceptash.IImageHasher"/>.
            </summary>
        </member>
        <member name="M:Perceptash.ImageHasherExtensions.CalculateAsync``1(Perceptash.IImageHasher,System.String,Perceptash.Computers.IImageHashComputer{``0})">
            <summary>
            Возвращает хеш-сумму файла изображения.
            </summary>
            <typeparam name="THash">Тип значения хеш-суммы.</typeparam>
            <param name="hasher">Реализация <see cref="T:Perceptash.IImageHasher"/>.</param>
            <param name="filePath">Полный путь до файла изображения.</param>
            <param name="computer">Реализация метода расчета хеш-суммы.</param>
        </member>
        <member name="T:Perceptash.HammingWeight">
            <summary>
            https://en.wikipedia.org/wiki/Hamming_weight
            </summary>
        </member>
        <member name="T:Perceptash.IImageHashComparable`1">
            <summary>
            Интерфейс, используемый для описания реализации сравнения хеш-сумм.
            </summary>
            <typeparam name="THash">Тип значения хеш-суммы.</typeparam>
        </member>
        <member name="M:Perceptash.IImageHashComparable`1.Similarity(`0)">
            <summary>
            Возвращает показатель различия двух изображений исходя из хеш-суммы.
            Если 1.0, то изображения полностью идентичны, в то время как 0 - полностью различаются.
            </summary>
            <param name="otherHash">Хеш-сумма, которая будет использована для сравнения.</param>
        </member>
        <member name="T:Perceptash.ImageAverageHash">
            <summary>
            Хеш-сумма, рассчитанная по алгоритму среднего хеша.
            </summary>
        </member>
        <member name="P:Perceptash.ImageAverageHash.InternalValue">
            <summary>
            Хеш-сумма.
            </summary>
        </member>
        <member name="M:Perceptash.ImageAverageHash.#ctor(System.UInt64)">
            <summary>
            Конструктор <see cref="T:Perceptash.ImageAverageHash"/>.
            </summary>
            <param name="value">Хеш-сумма.</param>
        </member>
        <member name="M:Perceptash.ImageAverageHash.Similarity(Perceptash.ImageAverageHash)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.ImageDifferenceHash256">
            <summary>
            256-битная хеш-сумма, рассчитанная по алгоритму http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html
            </summary>
        </member>
        <member name="M:Perceptash.ImageDifferenceHash256.#ctor(System.ReadOnlySpan{System.UInt64})">
            <summary>
            Конструктор <see cref="T:Perceptash.ImageDifferenceHash256"/>.
            </summary>
            <param name="values">Хеш-сумма.</param>
        </member>
        <member name="M:Perceptash.ImageDifferenceHash256.GetInternalValuesSpan">
            <summary>
            Возвращает хеш-сумму в виде массива значений.
            </summary>
        </member>
        <member name="M:Perceptash.ImageDifferenceHash256.Similarity(Perceptash.ImageDifferenceHash256)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.ImageDifferenceHash64">
            <summary>
            64-битная хеш-сумма, рассчитанная по алгоритму http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html
            </summary>
        </member>
        <member name="P:Perceptash.ImageDifferenceHash64.InternalValue">
            <summary>
            Хеш-сумма.
            </summary>
        </member>
        <member name="M:Perceptash.ImageDifferenceHash64.#ctor(System.UInt64)">
            <summary>
            Конструктор <see cref="T:Perceptash.ImageDifferenceHash64"/>.
            </summary>
            <param name="value">Хеш-сумма.</param>
        </member>
        <member name="M:Perceptash.ImageDifferenceHash64.Similarity(Perceptash.ImageDifferenceHash64)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.IImageHasher">
            <summary>
            Интерфейс, используемый для описания реализации метода расчета хеш-суммы.
            </summary>
        </member>
        <member name="P:Perceptash.IImageHasher.Transformer">
            <summary>
            Реализация методов преобразования изображения.
            </summary>
        </member>
        <member name="M:Perceptash.IImageHasher.CalculateAsync``1(System.IO.Stream,Perceptash.Computers.IImageHashComputer{``0},System.Threading.CancellationToken)">
            <summary>
            Возвращает хеш-сумму изображения.
            </summary>
            <typeparam name="THash">Тип значения хеш-суммы.</typeparam>
            <param name="stream">Поток, который относится к изображению.</param>
            <param name="computer">Реализация метода расчета хеш-суммы.</param>
            <param name="cancellationToken">Токен отмены операции.</param>
        </member>
        <member name="T:Perceptash.ImageHasher">
            <summary>
            Реализация метода расчета хеш-суммы.
            </summary>
        </member>
        <member name="P:Perceptash.ImageHasher.Transformer">
            <inheritdoc />
        </member>
        <member name="M:Perceptash.ImageHasher.#ctor(Perceptash.Transformers.IImageTransformer)">
            <summary>
            Конструктор <see cref="T:Perceptash.ImageHasher"/>.
            </summary>
            <param name="transformer">Реализация методов преобразования изображения.</param>
        </member>
        <member name="M:Perceptash.ImageHasher.CalculateAsync``1(System.IO.Stream,Perceptash.Computers.IImageHashComputer{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Perceptash.KnownImageHashes">
            <summary>
            Содержит статические экземпляры реализаций <see cref="T:Perceptash.Computers.IImageHashComputer`1"/> для переиспользования.
            </summary>
        </member>
        <member name="P:Perceptash.KnownImageHashes.Difference64">
            <summary>
            Реализация расчета 64-битной хеш-суммы.
            Описание алгоритма: http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html
            </summary>
        </member>
        <member name="P:Perceptash.KnownImageHashes.Difference256">
            <summary>
            Реализация расчета 256-битной хеш-суммы.
            Описание алгоритма: http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html
            </summary>
        </member>
        <member name="P:Perceptash.KnownImageHashes.Average">
            <summary>
            Реализация расчета хеш-суммы по алгоритму среднего хеша.
            </summary>
        </member>
        <member name="T:Perceptash.Transformers.IImageTransformer">
            <summary>
            Интерфейс, используемый для описания реализаций методов преобразования изображений.
            </summary>
        </member>
        <member name="M:Perceptash.Transformers.IImageTransformer.ConvertToGreyscaleAndResizeAsync(System.IO.Stream,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Преобразовывает изображение в черно-белое, изменяет его размер и возвращает результирующий массив байт.
            </summary>
            <param name="stream">Поток, который относится к изображению.</param>
            <param name="width">Новая ширина изображения.</param>
            <param name="height">Новая высота изображения.</param>
            <param name="cancellationToken">Токен отмены операции.</param>
        </member>
    </members>
</doc>
